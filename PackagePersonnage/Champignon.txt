package PackagePersonnage;

import java.awt.Image;

import javax.swing.ImageIcon;

import PackageObjets.Objet; 

public class Champignon extends Personnage implements Runnable{

	private Image ImgChampignon;
	private ImageIcon IcoChampignon;
	
	private final int PAUSE=15; //temps d'attente en ms entre deux tours de boucles
	private int dxChamp; //pas  de déplacement du champignon
	
	//***Constructeur***//
	
	public Champignon(int x, int y) {
		super(x, y, 27, 30);
		super.setPersonnage_tournE_vers_la_droite(true);
		super.setPersonnage_en_marche(true);
		this.dxChamp = 1;
		
		this.IcoChampignon = new ImageIcon(getClass().getResource("/pictures/champArretDroite.png"));
		this.ImgChampignon = IcoChampignon.getImage();
		
		Thread ChronoChamp = new Thread(this);
    	ChronoChamp.start();
	}
	
	//Getters et Setters
	public Image getImgChampignon() {return ImgChampignon;}
	public void setImgChampignon(Image imgChampignon) {ImgChampignon = imgChampignon;}
	
	//***Methodes***//
	
	public void Bouge() {
		if(super.isPersonnage_tournE_vers_la_droite() == true) {this.dxChamp =1;}
		else this.dxChamp = -1;
		super.setX(super.getX() + this.dxChamp); 
	}
	

	public void run() {
		try {Thread.sleep(20);}
		catch(InterruptedException e){}
		
		while(true) { //boucle infinie
			if(this.vivant == true) {
			this.Bouge();
			try{Thread.sleep(PAUSE);}
			catch(InterruptedException e){}
			  }
		} 
		
	}
	
	public void contact(Objet objet) {
		if (super.contactAvant(objet) == true && this.isPersonnage_tournE_vers_la_droite() == true){
			super.setPersonnage_tournE_vers_la_droite(false);
			this.dxChamp = -1;
		}
		 else if(super.contactArriere(objet) == true && this.isPersonnage_tournE_vers_la_droite() == false) {
				super.setPersonnage_tournE_vers_la_droite(true);
				this.dxChamp = 1;

		}
	}
	
	public void contact(Personnage personnage) {
		if (super.contactAvant(personnage) == true && this.isPersonnage_tournE_vers_la_droite() == true){
			super.setPersonnage_tournE_vers_la_droite(false);
			this.dxChamp = -1;
		}
		 else if(super.contactArriere(personnage) == true && this.isPersonnage_tournE_vers_la_droite() == false) {
				super.setPersonnage_tournE_vers_la_droite(true);
				this.dxChamp = 1;

		}
	}
	
	public Image meurt() {
		
		String str;
		Image img;
		ImageIcon ico;
	
		if(this.isPersonnage_tournE_vers_la_droite() == true) {str ="/pictures/champEcraseDroite.png";}
		else str ="/pictures/champEcraseGauche.png";
		ico = new ImageIcon(getClass().getResource(str));
		img = ico.getImage();
		return img;
	}
	
	
}
